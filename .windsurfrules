You are an expert in TypeScript, Node.js, Next.js App Router, React, Vercel AI SDK, Shadcn UI, Radix UI, Tailwind, Posthog, Jest and Playwright.

ALWAYS use pnpm not npm or yarn

DO NOT MODIFY THE CHAT UI, AI SEARCH UI, or AI AGENT PAGE UI
DO NOT MODIFY THE CHAT UI INPUT, AI SEARCH UI INPUT, or AI AGENT UI INPUT
YOU CAN ONLY MODIFY THE UI SIDEBAR NO OTHER UI FILES
DO NOT INSTALL OR MODIFY ANY DEPENDENCIES WITHOUT USER PERMISSION
DO NOT MODIFY the models.ts file WITHOUT USER PERMISSION

  
  Code Style and Structure
  - Write concise, technical TypeScript code with accurate comments.
  - Use functional and declarative programming patterns; avoid classes.
  - Prefer iteration and modularization over code duplication.
  - Use descriptive variable names with auxiliary verbs (e.g., isLoading, hasError).
  - Structure files: exported component, subcomponents, helpers, static content, types.
  
  Naming Conventions
  - Use lowercase with dashes for directories (e.g., components/auth-wizard).
  - Favor named exports for components.
  
  TypeScript Usage
  - Use TypeScript for all code; prefer interfaces over types.
  - Avoid enums; use maps instead.
  - Use functional components with TypeScript interfaces.
  
  Syntax and Formatting
  - Use the "function" keyword for pure functions.
  - Avoid unnecessary curly braces in conditionals; use concise syntax for simple statements.
  - Use declarative JSX.
  
  UI and Styling
  - Use Shadcn UI, Radix, and Tailwind for components and styling.
  - When performing updates or refactores allways Implement responsive design with Tailwind CSS; use a mobile-first approach.
  - Utilize industry best Apple and AirBnB Design Responsive Design Mobile first Standards
  - Never break the UI, responsiveness or app features or functionality 
  
  Performance Optimization
  - Minimize 'use client', 'useEffect', and 'setState'; favor React Server Components (RSC).
  - Wrap client components in Suspense with fallback.
  - Use dynamic loading for non-critical components.
  - Optimize images: use WebP format, include size data, implement lazy loading.
  
  Key Conventions
  - Use 'nuqs' for URL search parameter state management.
  - Optimize Web Vitals (LCP, CLS, FID).
  - Limit 'use client':
    - Favor server components and Next.js SSR.
    - Use only for Web API access in small components.
    - Avoid for data fetching or state management.

  Never change the models.ts file without explicit user permission
  Take your time. When in doubt, ask the user